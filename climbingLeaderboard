import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;
import java.util.Arrays; 
import java.util.ArrayList;
import java.util.List;


public class Solution {

    // Complete the climbingLeaderboard function below.
    static int[] climbingLeaderboard(Integer[] scores, int[] alice) {
       // TreeSet<Integer> temp = new TreeSet<>();
        List<Integer> list = Arrays.asList(scores);
        TreeSet<Integer> temp = new TreeSet<Integer>(list); 
        for(int j=0;j<scores.length;j++)
        { 
            if(new ArrayList<>(temp).indexOf(scores[j])==-1)
              temp.add(scores[j]);
        }
        int res[] = new int[alice.length];
        int i =0;
        int index;
        while(i != alice.length)
        {
            if(alice[i]>scores[0])
                res[i]=1;
            else if (alice[i]<scores[scores.length-1])
                res[i]=temp.size()+1;
            else if(temp.contains(alice[i]))
                res[i]=temp.size()-new ArrayList<>(temp).indexOf(alice[i]);
            else
                {
                    temp.add(alice[i]);
                    res[i]=temp.size()-new ArrayList<>(temp).indexOf(alice[i]);
                    temp.remove(alice[i]);
                }
            i++;
        }
        return res;
    }

    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        int scoresCount = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        Integer[] scores = new Integer[scoresCount];

        String[] scoresItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < scoresCount; i++) {
            int scoresItem = Integer.parseInt(scoresItems[i]);
            scores[i] = scoresItem;
        }

        int aliceCount = scanner.nextInt();
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        int[] alice = new int[aliceCount];

        String[] aliceItems = scanner.nextLine().split(" ");
        scanner.skip("(\r\n|[\n\r\u2028\u2029\u0085])?");

        for (int i = 0; i < aliceCount; i++) {
            int aliceItem = Integer.parseInt(aliceItems[i]);
            alice[i] = aliceItem;
        }

        int[] result = climbingLeaderboard(scores, alice);

        for (int i = 0; i < result.length; i++) {
            bufferedWriter.write(String.valueOf(result[i]));

            if (i != result.length - 1) {
                bufferedWriter.write("\n");
            }
        }

        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}
